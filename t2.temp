@bot.command(name="blacklist", aliases=['bl'])
@commands.is_owner()
async def blacklist(ctx, id, app=None):
    id = get_id_from_mention(id)

    if id == 736147895039819797:
        await ctx.send("Nou.")
        return
    else:
        pass

    try:
        await getusr(id)
        todo = "User"
    except NotFound:
        bot.get_guild
    


    if app is not None:
        dets = f"{app}_{id}\n"
        tosend = f"Blacklisted role `{id} : {await getrl(id).name}` for app `{app}`"
    else:
        dets = f"gbl_{id}\n"
        tosend = f"Blacklisted role `{id} : {await getrl(id).name}` globally."

    try:
        await bot.fetch_user(id)
        pass
    except NotFound:
        try:
            if app is not None:
                with open(r"bl\rl_blacklists.txt") as file:
                    if dets in file.readlines():
                        await ctx.send("Already Blacklisted")
                        return

                    else:
                        pass
                with open(r"bl\rl_blacklists.txt", "a") as f:
                    f.write(dets)
                    pass
            else:
                with open(r"bl\rl_blacklists.txt") as file:
                    if dets in file.readlines():
                        await ctx.send("Already Blacklisted")
                        return
                    else:
                        pass

                with open(r"bl\rl_blacklists.txt", "a") as f:
                    f.write(dets)
                    pass

            if app is not None:
                await ctx.send(tosend)
                asyncio.create_task(log(tosend, ctx))
            else:
                await ctx.send(tosend)
                asyncio.create_task(log(tosend, ctx))

            return
        except HTTPException:
            await ctx.send("Error, could you please re-run the command")
            return


    if app is not None:
        with open(r"bl\usr_blacklists.txt") as file:
            if dets in file.readlines():
                await ctx.send("Already Blacklisted")
                return
            else:
                pass
        with open(r"bl\usr_blacklists.txt", "a") as f:
            f.write(dets)
            pass
    else:
        with open(r"bl\usr_blacklists.txt") as file:
            if dets in file.readlines():
                await ctx.send("Already Blacklisted")
                return
            else:
                pass
        with open(r"bl\usr_blacklists.txt", "a") as f:
            f.write(dets)
            pass

    if write_blacklist_user(id, app):
        if app is not None:
            await ctx.send(tosend)
            asyncio.create_task(log(tosend, ctx))
        else:
            await ctx.send(tosend)
            asyncio.create_task(log(tosend, ctx))
